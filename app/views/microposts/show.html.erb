<div class="container-fluid">
  <div class="row">
    <div class="col-2 pt-5">
      <%= render "shared/user_info", user: @user %>
    </div>
    <div class="col-8 pt-5">
      <div class="container">
        <div class="photo" >
          <p><%= image_tag "#{@micropost.photo.to_s}", size: "500x500" %></p>
        </div>
        <% if @micropost.detail %>
          <div class="arranged-text">
            <%= simple_format(h(@micropost.detail), {class: "photo-text"}) %>
          </div>
        <% end %>
        <div class="good-btn " id="like_<%= @micropost.id %>">
          <%= render "likes/like", micropost: @micropost %>
        </div>
        <div class="post-show-tag my-1">
          <% @micropost.tag_list.each do |tag| %>
            <span class="badge badge-pill badge-info mr-2 mb-3 p-2"><%= tag %></span>
          <% end %>
        </div>
        <% if @micropost.latitude && @micropost.longitude %><%# もし@micropostインスタンスが緯度と経度の値を持っていたら %>
          <div id="show_map" class="show-map-location" style="height: 400px; width: 500px;"></div>
          <script>
            var marker
            var map_lat
            var map_lng
            var map_result
            var myLatLng
            let map
            let geocoder

            function initMap(){
              geocoder = new google.maps.Geocoder()
              if(document.getElementById('map')){ //新規投稿で表示する地図
                myLatLng = {lat: 35.676192, lng: 139.650311}
                map_lat = document.getElementById('micropost_latitude')
                map_lng = document.getElementById('micropost_longitude')

                map = new google.maps.Map(document.getElementById('map'),{
                  center: myLatLng,
                  zoom: 15,
                });
                marker = new google.maps.Marker();

            google.maps.event.addListener(map, 'click', mylistener); //地図クリック時の処理実行

            function mylistener(event){ //地図クリック時の処理内容
              marker.setPosition(new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()));
              marker.setMap(map);
              console.log(event.latLng.lat(), event.latLng.lng());
              map_lat.value = event.latLng.lat(); //クリックした場所の緯度をデータベース保存用の値にする
              map_lng.value = event.latLng.lng(); //クリックした場所の経度をデータベース保存用の値にする
            }

              }else{ //投稿詳細で表示する地図
                myLatLng = {lat: gon.lat, lng: gon.lng} //データベースの緯度・経度
                map = new google.maps.Map(document.getElementById('show_map'),{
                  center: myLatLng,
                  zoom: 15,
                });
                marker = new google.maps.Marker({ //マーカーを表示するのみ
                  position: myLatLng, //データベースの緯度・経度
                  map: map
                });
              }
            }

            function deleteMarker(){ //マーカー削除
              marker.setMap(null);
              map_lat.value = "";
              map_lng.value = "";
            }

            function codeAddress(){
              geocoder = new google.maps.Geocoder()
              let inputAddress = document.getElementById('address').value;
              geocoder.geocode({
                'address': inputAddress,
                'region': 'jp'
              }, function(results, status){
                if (status == 'OK'){
                  map.setCenter(results[0].geometry.location); //クリックした場所を中心にする
                  map_result = results[0].geometry.location;
                  map_lat.value = map_result.lat();
                  map_lng.value = map_result.lng();
                  marker.setPosition(new google.maps.LatLng(map_result.lat(), map_result.lng()));
                  marker.setMap(map);
                  console.log(map_lat.value, map_lng.value);
                }else{
                  alert('該当する結果がありませんでした');
                  initMap();
                }
              });
            }
          </script>
          <% if @micropost.address %><%# もし住所が入力されていれば %>
            <div class="arranged-text">
              <p class="adress-text mt-2">場所：<%= @micropost.address %></p>
            </div>
          <% end %>
        <% end %>
        <% if current_user.id == @micropost.user.id %>
          <div class="text-center mb-2">
            <%= link_to "編集する", edit_micropost_path(@micropost), class: "btn btn-light" %>
            <%= link_to "削除する", @micropost, method: :delete, data: {confirm: "投稿を削除しますか？"}, class: "btn btn-light" %>
          </div>
        <% end %>
      </div>
    </div>
    <div class="col-2 pt-5">
      <div class="container">
        <%= form_with model: [@micropost, @comment], local: true do |f| %>
          <div class="form-group mb-4 text-right">
            <%= f.text_area :content, class: "form-control mb-1" %>
            <%= f.submit "送信" %>
          </div>
        <% end %>
        <div class="text-center mb-3 comment-border">
          <h3 class="text-muted mb-0">コメント</h3>
        </div>
        <% @comments.each do |comment| %>
          <div class="d-flex">
            <div class="d-flex">
              <%= link_to user_path(comment.user) do %>
                  <%= image_tag comment.user.portrait.to_s, size: "40x40" %>
              <% end %>
            </div>
            <div class="d-flex flex-column">
              <small class="text-muted"><%= comment.user.name %></small>
              <div>
                <small><%= simple_format(h(comment.content)) %></small>
              </div>
            </div>
          </div>
          <div class="d-flex flex-row mb-3 border-bottom border-dark">
            <div class="d-flex align-items-center">
              <small><%= Date.parse(comment.created_at.to_s).strftime("%m月%d日") %></small>
            </div>
            <%= link_to "削除", micropost_comment_path(@micropost, comment), method: :delete, data: {confirm: "コメントを削除しますか？"}, class: "btn btn-sm btn-light ml-2" %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>